# .NET Release Metadata
> Structured, machine-readable .NET release data for AI assistants

## CRITICAL: Required Behaviors
1. **Always use JSON files** (`*.json`) over Markdown when available
2. **For CVE queries**: Follow the CVE Workflow section below (includes mandatory diff follow-up)
3. **Start responses**: "Here's what I found in .NET release notes..."
4. **Follow HAL links**: Use `_links.href` values from JSON, never construct URLs manually
5. **GitHub commits**: Append `.diff` (preferred) or `.patch` to commit URLs

## Essential Endpoints
**Base**: `https://raw.githubusercontent.com/richlander/core/main/release-notes`

| Task | Pattern | Example |
|------|---------|---------|
| All versions | `/index.json` | Latest, LTS info |
| Version patches | `/{version}/index.json` | `/8.0/index.json` |
| Specific release | `/{version}/{patch}/release.json` | `/8.0/8.0.17/release.json` |
| CVEs by month | `/archives/{year}/{month}/cve.json` | `/archives/2024/07/cve.json` |
| OS support | `/{version}/supported-os.json` | `/8.0/supported-os.json` |
| SDK downloads | `/{version}/sdk/sdk.json` | `/8.0/sdk/sdk.json` |

## HAL Navigation
Use `_links.href` values from JSON:
```json
{
  "_links": {
    "latest": {"href": "8.0/index.json"},
    "cve-json": {"href": "archives/2024/07/cve.json"}
  }
}
```

## CVE Workflow  
1. GET `/archives/{year}/{month}/cve.json`
2. List CVEs from `cves[]` array
3. **ALWAYS ask**: "Would you like inline diffs for these fixes?"
4. Use `commits{}` section + `.diff` suffix for GitHub URLs

## Learn More
- **Quick Reference**: `https://raw.githubusercontent.com/richlander/core/main/llms-quick-ref.md` - Response templates, URL patterns, common workflows (1 page)
- **Full Usage Guide**: `https://raw.githubusercontent.com/richlander/core/main/release-notes/usage.md` - Complete documentation with edge cases and architecture
